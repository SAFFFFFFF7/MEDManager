@using MEDManager.ViewModel;

@model MedicamentViewModel


<head>
    <meta name="viewport" content="width=device-width" />
    <title>Add</title>
</head>


<h1>Créer un nouveau médicament :</h1>
<form asp-action="Add" asp-controller="Medicament" method="post">

    <div class="form-group">
        <label asp-for="Name"></label> <input asp-for="Name" class="form-control" />
        @* ajout de message d'erreur de validation inline pour chaque propriete individuellement *@
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Quantity"></label> <input asp-for="Quantity" class="form-control" />
        @* ajout de message d'erreur de validation inline pour chaque propriete individuellement *@
        <span asp-validation-for="Quantity" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Ingredients"></label> <input asp-for="Ingredients" class="form-control" />
        @* ajout de message d'erreur de validation inline pour chaque propriete individuellement *@
        <span asp-validation-for="Ingredients" class="text-danger"></span>
    </div>

    @* <h4>Antécédents</h4>
    <div class="form-group">
        @foreach (var medicalHistory in Model.MedicalHistories)
        {
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" name="SelectedMedicalHistoryIds" value="@medicalHistory.Id"
                @(Model.SelectedMedicalHistoryIds != null && Model.SelectedMedicalHistoryIds.Contains(medicalHistory.Id) ? "checked" : "") />
                    <label class="form-check-label">@medicalHistory.Name</label>
                </div>
        }
    </div>

    <h4>Allergies</h4>
    <div class="form-group">
        @foreach (var allergy in Model.Allergies)
        {
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" name="SelectedAllergyIds" value="@allergy.Id"
                @(Model.SelectedAllergyIds != null && Model.SelectedAllergyIds.Contains(allergy.Id) ? "checked" : "") />
                    <label class="form-check-label">@allergy.Name</label>
                </div>
        }
    </div>  *@

    <div class="form-group">
        @Html.LabelFor(model => model.SelectedMedicalHistoryIds, new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-6">
            @Html.ListBoxFor(model => model.SelectedMedicalHistoryIds, new MultiSelectList(Model.DrpMedicalHistories,
                     "Value", "Text"), new
                     {
                         @class = "form-control",
                         multiple = "multiple",
                         id = "MedicalHistories_dropdown"
                     })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SelectedAllergyIds, new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-6">
            @Html.ListBoxFor(model => model.SelectedAllergyIds, new MultiSelectList(Model.DrpAllergies,
                     "Value", "Text"), new
                     {
                         @class = "form-control",
                         multiple = "multiple",
                         id = "Allergies_dropdown"
                     })
        </div>
    </div>

    <br />
    <br />
    <input type="submit" value="Ajouter" class="btn btn-primary" />
</form>

@* Permet de visualiser le resume de l'ensemble des erreurs de validation, ceci est un tag helper *@
<div asp-validation-summary="All" class="text-danger"></div>

@section Scripts
{
    <script>
        $(document).ready(function () {
            $('#MedicalHistories_dropdown').multiselect({
                maxHeight: 400,
            });
        });
        $(document).ready(function () {
            $('#Allergies_dropdown').multiselect({
                maxHeight: 400,
            });
        });
    </script>
}
